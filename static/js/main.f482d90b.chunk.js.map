{"version":3,"sources":["components/CodeSnippets/index.js","components/LandingPage/CodeSnippets.tsx","components/LandingPage/ContactInfo.tsx","components/LandingPage/Background.tsx","components/LandingPage/MainText.tsx","components/LandingPage/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["CodeArray","CodeSnippets","useState","Math","floor","random","selectedCode","setSelectedCode","useEffect","setInterval","percent","style","zIndex","marginBottom","width","window","innerWidth","height","backgroundColor","marginTop","boxShadow","borderRadius","language","isblEditorLight","ContactInfo","display","flexDirection","justifyContent","alignItems","flexGrow","href","title","LinkedinOutlined","color","fontSize","marginRight","FacebookOutlined","InstagramOutlined","MailOutlined","padding","textDecoration","Background","params","particles","move","speed","value","line_linked","number","size","interactivity","events","onhover","enable","mode","MainText","writingMode","fontWeight","overflow","whiteSpace","className","paddingLeft","paddingRight","borderLeft","backgroundImage","borderColor","type","LandingPage","position","flexWrap","borderBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f482d90b.chunk.js","sourcesContent":["export const CodeArray = [\r\n  \"\",\r\n  'const crawl = async ({ url,\\n lvl, database }) => {\\n  var dbo = database.db(\"mydb\");\\n  if (lvl < 10) {\\n    try {\\n  const response = await fetch(url);\\n  const html = await response.text();',\r\n  ' <div style={{\\n display: \"flex\",\\n flexGrow: 1,\\n height: \"100%\",\\n alignItems: \"center\",\\n justifyContent: \"center\",\\n flexWrap: \"wrap\",\\n }}>',\r\n  'MongoClient.connect(url, { useUnifiedTopology: true }, function (err, db) {\\nif (err) throw err;\\nvar dbo = db.db(\"mydb\");\\nvar myobj = { url: \"http\", header: \"site header\" };\\ndbo.collection(\"websites\").insertOne(myobj, function (err, res) {\\n if (err) throw err;\\n db.close();\\n });});',\r\n  \"useEffect(() => {\\n setQrRef((elRef: any) =>\\n Array(arrLength)\\n   .fill(elRef)\\n   .map((_, i) => elRef[i] || createRef())\\n   );\\n }, [arrLength]);\",\r\n];\r\n","import { Progress } from \"antd\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { isblEditorLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { CodeArray } from \"../CodeSnippets\";\r\n\r\nexport const CodeSnippets = () => {\r\n  const [percent, setPercent] = useState<number>(0);\r\n  const [selectedCode, setSelectedCode] = useState<number>(\r\n    Math.floor(Math.random() * 4 + 1)\r\n  );\r\n\r\n  let interval: any;\r\n  let i: number = 0;\r\n\r\n  const startTimer = () => {\r\n    interval = setInterval((percent) => {\r\n      setSelectedCode(Math.floor(Math.random() * 4 + 1));\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        zIndex: 20000,\r\n      }}\r\n    >\r\n      <div style={{ marginBottom: 16 }}>\r\n        Random snippets of code i've written (every 5 seconds)\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          width: window.innerWidth > 425 ? 400 : 300,\r\n          height: 200,\r\n          backgroundColor: \"white\",\r\n          marginTop: 0,\r\n          boxShadow: \"0px 2px 5px #CCCCCC\",\r\n          borderRadius: 2,\r\n        }}\r\n      >\r\n        <SyntaxHighlighter language=\"javascript\" style={isblEditorLight}>\r\n          {CodeArray[selectedCode]}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FacebookOutlined,\r\n  InstagramOutlined,\r\n  LinkedinOutlined,\r\n  MailOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport const ContactInfo = () => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n          flexGrow: 1,\r\n          marginTop: 64,\r\n        }}\r\n      >\r\n        <a\r\n          href=\"https://www.linkedin.com/in/c%C4%83t%C4%83lin-adrian-chita-0b9345160/\"\r\n          style={{ zIndex: 9999 }}\r\n        >\r\n          <Tooltip title=\"LinkedIn\">\r\n            <LinkedinOutlined\r\n              style={{ color: \"#222222\", fontSize: \"2em\", marginRight: 8 }}\r\n            />\r\n          </Tooltip>\r\n        </a>\r\n\r\n        <a\r\n          href=\"https://www.facebook.com/catalinadrian.chita.1\"\r\n          style={{ zIndex: 9999 }}\r\n        >\r\n          <Tooltip title=\"Facebook\">\r\n            <FacebookOutlined\r\n              style={{ color: \"#222222\", fontSize: \"2em\", marginRight: 8 }}\r\n            />\r\n          </Tooltip>\r\n        </a>\r\n\r\n        <a\r\n          href=\"https://www.instagram.com/catalin_chita/?hl=en\"\r\n          style={{ zIndex: 9999 }}\r\n        >\r\n          <Tooltip title=\"Instagram\">\r\n            <InstagramOutlined\r\n              style={{ color: \"#222222\", fontSize: \"2em\", marginRight: 8 }}\r\n            />\r\n          </Tooltip>\r\n        </a>\r\n        <a style={{ zIndex: 9999 }}>\r\n          <Tooltip title=\"chitacata@yahoo.com\" style={{ zIndex: 200000 }}>\r\n            <MailOutlined style={{ color: \"#222222\", fontSize: \"2em\" }} />\r\n          </Tooltip>\r\n        </a>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          color: \"grey\",\r\n          zIndex: 9999,\r\n\r\n          width: \"95vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          padding: 8,\r\n        }}\r\n      >\r\n        <a\r\n          href=\"https://vincentgarreau.com/particles.js/\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          Particle.js\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import Particles from \"react-particles-js\";\r\nimport React from \"react\";\r\n\r\nexport const Background = () => {\r\n  return (\r\n    <Particles\r\n      width=\"97vw\"\r\n      height=\"97vh\"\r\n      params={{\r\n        particles: {\r\n          move: { speed: 0.4 },\r\n          color: {\r\n            value: \"#333333\",\r\n          },\r\n          line_linked: {\r\n            color: {\r\n              value: \"#00b8e6\",\r\n            },\r\n          },\r\n          number: {\r\n            value: window.innerWidth > 600 ? 60 : 14,\r\n          },\r\n          size: {\r\n            value: 2,\r\n          },\r\n        },\r\n        interactivity: {\r\n          events: {\r\n            onhover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport const MainText = () => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div\r\n        style={{\r\n          writingMode: \"vertical-rl\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 18,\r\n          height: 250,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <div style={{ whiteSpace: \"nowrap\" }} className=\"scrolling-text\">\r\n          React | Typescript | HTML/CSS | SEO | Javascript | MaterialUI/Antd +\r\n          more UI Frameworks | CSS Animations | Redux | Git\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: window.innerWidth > 425 ? 32 : 8,\r\n          paddingRight: window.innerWidth > 425 ? 64 : 8,\r\n          zIndex: 9999,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          borderLeft: \"2px solid #222222\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            fontSize: \"3em\",\r\n            marginBottom: -16,\r\n            paddingRight: 8,\r\n            borderRadius: 6,\r\n          }}\r\n        >\r\n          Frontend Developer\r\n        </h1>\r\n\r\n        <h1>Chita Cătălin-Adrian</h1>\r\n        <h3 style={{ marginBottom: -2 }}>Using libraries is easy</h3>\r\n        <h3 style={{ marginBottom: -2 }}>\r\n          Writing boilerplate code & logic is more difficult\r\n        </h3>\r\n        <h3>I make the best of both worlds</h3>\r\n\r\n        <Button\r\n          style={{\r\n            marginTop: 32,\r\n            width: \"50%\",\r\n            backgroundImage:\r\n              \"linear-gradient(to right top, #93b9f3, #7fb1f6, #69a8f8, #4da0fb, #1c98fd)\",\r\n            borderColor: \"#80B1F6\",\r\n          }}\r\n          type=\"primary\"\r\n        >\r\n          See my work!\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { CodeSnippets } from \"./CodeSnippets\";\r\nimport { ContactInfo } from \"./ContactInfo\";\r\nimport { Background } from \"./Background\";\r\nimport { MainText } from \"./MainText\";\r\nimport React from \"react\";\r\n\r\nexport const LandingPage = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ position: \"absolute\" }}>\r\n        <Background />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          flexDirection: \"column\",\r\n          marginTop: 64,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexGrow: 1,\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n            borderBottom: \"1px solid grey\",\r\n            padding: 32,\r\n          }}\r\n        >\r\n          <MainText />\r\n          <CodeSnippets />\r\n        </div>\r\n      </div>\r\n      <ContactInfo />\r\n    </div>\r\n  );\r\n};\r\n","import \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { LandingPage } from \"./components/LandingPage\";\r\n\r\nfunction App() {\r\n  return <LandingPage />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}