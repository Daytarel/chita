{"version":3,"sources":["components/CodeSnippets/index.js","App.tsx","reportWebVitals.js","index.js"],"names":["CodeArray","App","style","display","flexDirection","height","alignItems","justifyContent","position","width","params","particles","move","speed","color","value","line_linked","number","window","innerWidth","size","interactivity","events","onhover","enable","mode","flexWrap","flexGrow","paddingLeft","paddingRight","zIndex","language","a11yDark","marginTop","href","LinkedinOutlined","fontSize","marginRight","FacebookOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAY,CACvB,uJ,6CC8GaC,MAvGf,WACE,OACE,sBACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRC,WAAY,SACZC,eAAgB,UANpB,UASE,qBAAKL,MAAO,CAAEM,SAAU,YAAxB,SACE,cAAC,IAAD,CACEC,MAAM,OACNJ,OAAO,OACPK,OAAQ,CACNC,UAAW,CACTC,KAAM,CAAEC,MAAO,GACfC,MAAO,CACLC,MAAO,WAETC,YAAa,CACXF,MAAO,CACLC,MAAO,YAGXE,OAAQ,CACNF,MAAOG,OAAOC,WAAa,IAAM,GAAK,IAExCC,KAAM,CACJL,MAAO,IAGXM,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,kBAQlB,sBACEvB,MAAO,CACLC,QAAS,OACTuB,SAAU,OACVtB,cAAe,UAJnB,UAOE,sBACEF,MAAO,CACLC,QAAS,OACTwB,SAAU,EACVD,SAAU,OACVnB,eAAgB,UALpB,UAQE,sBACEL,MAAO,CACL0B,YAAa,GACbC,aAAc,GACdC,OAAQ,MAJZ,UAOE,oDAPF,0BAWA,sBAAK5B,MAAO,CAAE4B,OAAQ,KAAtB,iDAEE,8BACE,cAAC,IAAD,CAAmBC,SAAS,aAAa7B,MAAO8B,IAAhD,SACGhC,EAAU,aAMnB,qBACEE,MAAO,CACLC,QAAS,OACTI,eAAgB,SAChBD,WAAY,aACZqB,SAAU,EACVM,UAAW,IANf,SASE,oBAAGC,KAAK,aAAahC,MAAO,CAAE4B,OAAQ,MAAtC,UACE,cAACK,EAAA,EAAD,CACEjC,MAAO,CAAEY,MAAO,OAAQsB,SAAU,MAAOC,YAAa,KAGxD,cAACC,EAAA,EAAD,CAAkBpC,MAAO,CAAEY,MAAO,OAAQsB,SAAU,qBC3FjDG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c0d5cb3.chunk.js","sourcesContent":["export const CodeArray = [\r\n  ' <div style={{\\n display: \"flex\",\\n flexGrow: 1,\\n height: \"100%\",\\n alignItems: \"center\",\\n justifyContent: \"center\",\\n flexWrap: \"wrap\",\\n }}\\n >',\r\n];\r\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport { CodeArray } from \"./components/CodeSnippets\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport React from \"react\";\r\nimport { FacebookOutlined, LinkedinOutlined } from \"@ant-design/icons\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ position: \"absolute\" }}>\r\n        <Particles\r\n          width=\"97vw\"\r\n          height=\"97vh\"\r\n          params={{\r\n            particles: {\r\n              move: { speed: 1 },\r\n              color: {\r\n                value: \"#333333\",\r\n              },\r\n              line_linked: {\r\n                color: {\r\n                  value: \"#333333\",\r\n                },\r\n              },\r\n              number: {\r\n                value: window.innerWidth > 600 ? 60 : 20,\r\n              },\r\n              size: {\r\n                value: 2,\r\n              },\r\n            },\r\n            interactivity: {\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\",\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexGrow: 1,\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              paddingLeft: 32,\r\n              paddingRight: 64,\r\n              zIndex: 9999,\r\n            }}\r\n          >\r\n            <h1>Frontend Develeper</h1>\r\n            Chita Catalin-Adrian\r\n          </div>\r\n\r\n          <div style={{ zIndex: 20000 }}>\r\n            Random snippets of code i've written\r\n            <div>\r\n              <SyntaxHighlighter language=\"javascript\" style={a11yDark}>\r\n                {CodeArray[0]}\r\n              </SyntaxHighlighter>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            flexGrow: 1,\r\n            marginTop: 16,\r\n          }}\r\n        >\r\n          <a href=\"google.com\" style={{ zIndex: 9999 }}>\r\n            <LinkedinOutlined\r\n              style={{ color: \"#000\", fontSize: \"2em\", marginRight: 8 }}\r\n            />\r\n\r\n            <FacebookOutlined style={{ color: \"#000\", fontSize: \"2em\" }} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}